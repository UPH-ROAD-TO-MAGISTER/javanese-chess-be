basePath: /
definitions:
  http.CreateRoomRequest:
    properties:
      playerName:
        type: string
    type: object
  http.MoveBotRequest:
    properties:
      botId:
        type: string
      holdCards:
        items:
          type: integer
        type: array
      roomCode:
        type: string
    type: object
  http.MoveRequest:
    properties:
      playerId:
        type: string
      roomCode:
        type: string
      value:
        type: integer
      x:
        type: integer
      "y":
        type: integer
    type: object
  http.PlayRequest:
    properties:
      bots:
        type: integer
      roomCode:
        type: string
    type: object
  http.PlayerHand:
    properties:
      cards:
        items:
          type: integer
        type: array
      playerId:
        type: string
    type: object
  http.SetHandsRequest:
    properties:
      hands:
        items:
          $ref: '#/definitions/http.PlayerHand'
        type: array
      roomCode:
        type: string
    type: object
host: 98.70.41.170:9000
info:
  contact:
    email: backend@yourcompany.com
    name: Backend Team
  description: REST API for heuristic-based chess-like bot (Go + Gin)
  title: Javanese Chess Bot API
  version: "1.0"
paths:
  /config/weights:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get heuristic configuration
      tags:
      - Config
    post:
      consumes:
      - application/json
      parameters:
      - description: New heuristic weights
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update heuristic configuration
      tags:
      - Config
  /create-room:
    post:
      consumes:
      - application/json
      description: Create a new room with a single human player
      parameters:
      - description: Player info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create new room
      tags:
      - Room
  /move:
    post:
      consumes:
      - application/json
      description: Submit coordinates (x, y) and card value for player's move
      parameters:
      - description: Move data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.MoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Player makes a move
      tags:
      - Game
  /move-bot:
    post:
      consumes:
      - application/json
      description: Bot picks the best move using heuristic evaluation
      parameters:
      - description: Bot move
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.MoveBotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Let bot make its move
      tags:
      - Game
  /play:
    post:
      consumes:
      - application/json
      description: Initialize bots to start the game (default 1 bot if not specified)
      parameters:
      - description: Room info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.PlayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Add bots to a room
      tags:
      - Room
  /possible-moves:
    get:
      description: Returns all available cells for a player's move (place/replace)
      parameters:
      - description: Room Code
        in: query
        name: roomCode
        required: true
        type: string
      - description: Player ID
        in: query
        name: playerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get possible move boxes for player
      tags:
      - Game
  /set-hands:
    post:
      consumes:
      - application/json
      description: Apply shuffled hands from FE to room
      parameters:
      - description: Hands data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.SetHandsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Set player hands (cards) manually
      tags:
      - Game
swagger: "2.0"
